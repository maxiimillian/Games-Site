name: Deploy Backend to Amazon ECS

on:
  push:
    branches:
      - production

env:
  $USER: maxiimillian
  $DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN}}
  DOCKER_REPOSITORY: maxiimillian/test                
  IMAGE_TAG: backend
  DB_PATH: ${{ secrets.DB_PATH }}
  BOARD_DB_PATH: ${{secrets.BOARD_DB_PATH}}
  ALLOWED_URL: ${{ secrets.ALLOWED_URL }}
  PORT: 3002
  
permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build, tag, and push image to Docker
      id: build-image
      run: |
        # Build a docker container and push it to docker
        docker build -t $DOCKER_REPOSITORY:$IMAGE_TAG --build-arg DB_PATH=$DB_PATH --build-arg PORT=$PORT --build-arg BOARD_DB_PATH=$BOARD_DB_PATH --build-arg ALLOWED_URL=$ALLOWED_URL ./backend/
        docker push $DOCKER_REPOSITORY/:$IMAGE_TAG

    - name: Deploy new container on linode
      env:
        SSH_AUTH_SOCK: /tmp/ssh_agent.sock
      run: |
        scp -o StrictHostKeyChecking=no ./docker-compose.prod.yml root@${{ secrets.LINODE_IP_ADDRESS }}:/app
        ssh -o StrictHostKeyChecking=no root@${{ secrets.LINODE_IP_ADDRESS }} << 'ENDSSH'
          cd /app
          docker login -u $USER -p $DOCKER_TOKEN
          docker pull $DOCKER_REPOSITORY:$IMAGE_TAG
          sudo docker-compose -f docker-compose.prod.yml up -d
        ENDSSH
