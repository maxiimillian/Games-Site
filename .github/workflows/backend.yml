name: Deploy Backend to Amazon ECS

on:
  push:
    branches:
      - production

env:
  USER: maxiimillian
  DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN}}
  DOCKER_REPOSITORY: maxiimillian/test                
  IMAGE_TAG: backend
  DB_PATH: ${{ secrets.DB_PATH }}
  BOARD_DB_PATH: ${{secrets.BOARD_DB_PATH}}
  ALLOWED_URL: ${{ secrets.ALLOWED_URL }}
  PORT: 3002
  
permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: ./backend/
        build-args: |
          DB_PATH=$DB_PATH
          PORT=$PORT
          BOARD_DB_PATH=$BOARD_DB_PATH
          ALLOWED_URL=$ALLOWED_URL
        push: true
        tags: maxiimillian/test:backend

    - name: Set up the docker compose
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOSTING_IP }}
        username: root
        port: 80
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        source: "./docker-compose.yml"
        target: "app"

    - name:  Deploy new container on linode
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOSTING_IP }}
        username: root
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          cd app
          cd /app
          docker login -u $USER -p $DOCKER_TOKEN
          docker pull $DOCKER_REPOSITORY:$IMAGE_TAG
          sudo docker-compose -f docker-compose.yml up -d