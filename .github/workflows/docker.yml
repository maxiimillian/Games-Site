name: Build and Publish

on:
  push:
    branches: [ production ]

jobs:   
  front-end:
    runs-on: ubuntu-18.04    
    env:      
      DOCKER_REGISTRY: ${{ secrets.DOCKER_USERNAME }}      
      DOCKER_IMAGE: test:frontend
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}  
      DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
      DOCKER_TARGET_PLATFORM: linux/arm/v7                     
    steps:    
      - name: Checkout the code       
        uses: actions/checkout@v1      

      - name: Set up Docker Buildx      
        uses: crazy-max/ghaction-docker-buildx@v1      
        with:        
          version: latest        

      - name: Prepare      
        if: success()      
        id: prepare      
        run: |        
          echo ::set-output name=docker_platform::${DOCKER_TARGET_PLATFORM}        
          echo ::set-output name=docker_image::${DOCKER_REGISTRY}/${DOCKER_IMAGE}        
          echo ::set-output name=version::${GITHUB_RUN_NUMBER}        

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
              
      - name: Run Buildx (push image)      
        if: success()      
        run: |        
          docker buildx build \        --platform ${{ steps.prepare.outputs.docker_platform }} \        --tag ${{ steps.prepare.outputs.docker_image }}:${{ steps.prepare.outputs.version }} \        --file ./Dockerfile \        --output type=image,push=true .